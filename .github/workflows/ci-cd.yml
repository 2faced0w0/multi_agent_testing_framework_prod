name: CI-CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: "Deploy environment"
        required: true
        default: staging
        type: choice
        options:
          - staging
          - production

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: project
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: project/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test --silent

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/2faced0w0/multi_agent_testing_framework_prod
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: project
          file: project/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:sha-${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:staging

  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/2faced0w0/multi_agent_testing_framework_prod
    steps:
      - uses: actions/checkout@v4
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.4.2'
      - name: Set kubectl context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
      - name: Patch image tag and deploy (staging)
        if: ${{ inputs.environment == 'staging' }}
        run: |
          kustomize edit set image ${{ env.IMAGE_NAME }}=${{ env.IMAGE_NAME }}:staging
          kubectl apply -k project/k8s/overlays/staging
      - name: Patch image tag and deploy (production)
        if: ${{ inputs.environment == 'production' }}
        run: |
          kustomize edit set image ${{ env.IMAGE_NAME }}=${{ env.IMAGE_NAME }}:latest
          kubectl apply -k project/k8s/overlays/production
