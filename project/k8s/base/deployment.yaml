apiVersion: apps/v1
kind: Deployment
metadata:
  name: multi-agent-testing-framework
spec:
  replicas: 1
  selector:
    matchLabels:
      app: matf
  template:
    metadata:
      labels:
        app: matf
    spec:
      serviceAccountName: matf-sa
      # Uncomment if pulling from a private registry and create the secret accordingly
      # imagePullSecrets:
      #   - name: regcred
      securityContext:
        runAsNonRoot: true
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: framework
          image: ghcr.io/2faced0w0/multi_agent_testing_framework_prod:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: matf-secrets
                  key: redisPassword
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: matf-secrets
                  key: jwtSecret
            - name: MISTRAL_API_KEY
              valueFrom:
                secretKeyRef:
                  name: matf-secrets
                  key: mistralApiKey
            - name: GITHUB_WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: matf-secrets
                  key: githubWebhookSecret
          ports:
            - containerPort: 3000
            - containerPort: 3001
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1000
            runAsGroup: 1000
            capabilities:
              drop: ["ALL"]
          readinessProbe:
            httpGet:
              path: /api/v1/system/health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/v1/system/health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 20
          startupProbe:
            httpGet:
              path: /api/v1/system/health
              port: 3000
            failureThreshold: 30
            periodSeconds: 5
          envFrom:
            - configMapRef:
                name: matf-config
          volumeMounts:
            - name: data
              mountPath: /app/data
            - name: logs
              mountPath: /app/logs
            - name: data
              mountPath: /app/generated_tests
              subPath: generated_tests
            - name: data
              mountPath: /app/test_execution_reports
              subPath: test_execution_reports
      initContainers:
        - name: init-data-subdirs
          image: busybox:1.36
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 2000
            allowPrivilegeEscalation: false
          command: ["sh","-c","mkdir -p /app/data/generated_tests /app/data/test_execution_reports"]
          volumeMounts:
            - name: data
              mountPath: /app/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: matf-data
        - name: logs
          emptyDir: {}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: matf-sa

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: matf-role
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log", "configmaps"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: matf-rolebinding
subjects:
  - kind: ServiceAccount
    name: matf-sa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: matf-role
